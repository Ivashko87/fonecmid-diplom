#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции
//***Добавлено Ивашко ВКМ_{
//Зоздание Списка Договоров
Функция СоздатьСписокНаСервере(Дата, СоздатьОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
	|	ДоговорыКонтрагентов.Организация КАК Организация,
	|	ДоговорыКонтрагентов.Владелец КАК Контрагент
	|ПОМЕСТИТЬ ВТ_Договора
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ВКМ_ОкончанияДействия >= &Дата
	|	И ДоговорыКонтрагентов.ВКМ_НачалаДействия <= &Дата
	|	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.АбоненскоеОбслуживание)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Договор КАК Договор
	|ПОМЕСТИТЬ ВТ_Реализации
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И РеализацияТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Договора.Ссылка КАК Договор,
	|	ВТ_Реализации.Ссылка КАК Реализация,
	|	ВТ_Договора.Организация КАК Организация,
	|	ВТ_Договора.Контрагент КАК Контрагент
	|ИЗ
	|	ВТ_Договора КАК ВТ_Договора
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Реализации КАК ВТ_Реализации
	|		ПО ВТ_Договора.Ссылка = ВТ_Реализации.Договор";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();  
	
	ВсегоВыборка = Выборка.Количество();
	ТекВыборка = 1;
	
	СписокРеализацийМассив = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		СписокРеализацийСтруктура = Новый Структура;
		Если СоздатьОбъект Тогда
			Если Не ЗначениеЗаполнено(Выборка.Реализация) Тогда
				НоваяРеализация = СоздатьРеализацию(Выборка.Договор, КонецМесяца(Дата)); 
				СписокРеализацийСтруктура.Вставить("Договор", Выборка.Договор); 
				СписокРеализацийСтруктура.Вставить("Реализация", НоваяРеализация); 
			Иначе 
				СписокРеализацийСтруктура.Вставить("Договор", Выборка.Договор); 
				СписокРеализацийСтруктура.Вставить("Реализация", Выборка.Реализация);	
			КонецЕсли;
		Иначе
			СписокРеализацийСтруктура.Вставить("Договор", Выборка.Договор); 
			СписокРеализацийСтруктура.Вставить("Реализация", Выборка.Реализация);
		КонецЕсли;
		
		СписокРеализацийМассив.Добавить(СписокРеализацийСтруктура); 
		
		Процент = 100 - ЦЕЛ((ВсегоВыборка - ТекВыборка)/ВсегоВыборка*100); 
		
		ДлительныеОперации.СообщитьПрогресс(Процент);
		
		ТекВыборка = ТекВыборка+1;
		
	КонецЦикла;
	
	Возврат СписокРеализацийМассив; 
	// ВКМ_}
	
КонецФункции 

//***Добавлено Ивашко ВКМ_{
//Зоздание Новой Реализации
Функция СоздатьРеализацию(Договор, Дата)
		
	ДокОбъект = Документы.РеализацияТоваровУслуг.СоздатьДокумент(); 
	ДокОбъект.Дата = Дата;
	ДокОбъект.Договор = Договор;
	ДокОбъект.Контрагент = Договор.Владелец;
	ДокОбъект.Организация = Договор.Организация;
	ДокОбъект.ВКМ_ВыполнитьАвтозаполнение();  
	ДокОбъект.Ответственный = Пользователи.ТекущийПользователь(); 
    
	НачатьТранзакцию(); 
	
	Если ДокОбъект.ПроверитьЗаполнение() Тогда
	
		Попытка
			ДокОбъект.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный); 
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не удалось провести документ";
			Сообщение.Сообщить();
			ЗаписьЖурналаРегистрации("ОБРАБОТКА: Массовое создание актов. Отмена проведения"); 
		КонецПопытки;
		
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Не удалось создать реализацию по Договору: %1. Не все обязательные данные заполнены", Договор);
		Сообщение.Сообщить();
		
	КонецЕсли;
	
	Возврат ДокОбъект.Ссылка;  
	//ВКМ_}
	
КонецФункции

#КонецОбласти

#КонецЕсли