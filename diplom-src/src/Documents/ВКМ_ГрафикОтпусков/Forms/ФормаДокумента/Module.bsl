#Область ОбработчикиСобытийФормы 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//***Добавлено Ивашко ВКМ_{ 
	СтандартнаяОбработка = Ложь;
	ЭтаФорма.АвтоЗаголовок = Ложь;
	ЭтаФорма.Заголовок = "План отпусков"+?(ЗначениеЗаполнено(Объект.ГодПериод), " на "+XMLСтрока(Год(Объект.ГодПериод)), "")+" год"; 
	 //ВКМ_}
КонецПроцедуры 
 
&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	//***Добавлено Ивашко ВКМ_{ 	
	Если Год(Объект.ГодПериод) = 1 Тогда
		ВКМ_СформироватьСписокВыбораГод(Год(ТекущаяДата())); 
		ГодСтрока = Формат(ТекущаяДата(), "ДФ=гггг");
	Иначе
		ВКМ_СформироватьСписокВыбораГод(Год(Объект.ГодПериод));
		ГодСтрока = Формат(Объект.ГодПериод, "ДФ=гггг");
	КонецЕсли;

	ВКМ_ПроверитьКолвоДнейОтпуска();
    //ВКМ_}
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГодСтрокаПриИзменении(Элемент)
	//***Добавлено Ивашко ВКМ_{
	ГодСтрокаПриИзмененииНаСервере();
	// ВКМ_}
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтпускаСотрудников
&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	
	//***Добавлено Ивашко ВКМ_{
	  ВКМ_ПроверитьКолвоДнейОтпуска();
    //ВКМ_}
	
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)  
	
	//***Добавлено Ивашко ВКМ_{
	ВКМ_ПроверитьКолвоДнейОтпуска();
	//ВКМ_}
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура АнализГрафика(Команда)
	
	//***Добавлено Ивашко ВКМ_{
	АдресВХранилище = ВКМ_ПоместитьВоВременноеХранилищеНаСервере();
	Адрес = Новый Структура("АдресВХранилище", АдресВХранилище);
	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.АнализГрафика",Адрес,ЭтаФорма);
	// ВКМ_}
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ГодСтрокаПриИзмененииНаСервере()
	
	//***Добавлено Ивашко ВКМ_{	
	ВыбрГод = Число(Прав(ГодСтрока, 4));
	Объект.ГодПериод = НачалоГода(Дата(ВыбрГод,1,1));
	Если Объект.Ссылка.ГодПериод <> Объект.ГодПериод Тогда
		Модифицированность = Истина;
	КонецЕсли;
	// ВКМ_} 
	
КонецПроцедуры

&НаКлиенте
Процедура ВКМ_СформироватьСписокВыбораГод(Год)  
	
    //***Добавлено Ивашко ВКМ_{
	Элементы.ГодСтрока.СписокВыбора.Очистить();
	Для к = -4 По 5  Цикл
		Элементы.ГодСтрока.СписокВыбора.Добавить(Формат(Год+к, "ЧГ=0"));    
	КонецЦикла;  
	// ВКМ_} 
	
КонецПроцедуры


&НаСервере
Функция ВКМ_ПоместитьВоВременноеХранилищеНаСервере()
	
	//***Добавлено Ивашко ВКМ_{	
	Возврат ПоместитьВоВременноеХранилище(Объект.ОтпускаСотрудников.Выгрузить(,"Сотрудник,ДатаНачала,ДатаОкончания"), УникальныйИдентификатор); 
	// ВКМ_}
	
КонецФункции

&НаКлиенте
Процедура ВКМ_ПроверитьКолвоДнейОтпуска()   
	
	//***Добавлено Ивашко ВКМ_{
	МассивСотрудники = ВКМ_ПолучитьКоличествоДнейОтпуска();
	ВКМ_УстановитьПодсветкуСтрок(МассивСотрудники);
		//ВКМ_}
	
КонецПроцедуры

&НаСервере
Процедура ВКМ_УстановитьПодсветкуСтрок(МассивСотрудники)
	
	//***Добавлено Ивашко ВКМ_{ 
	УсловноеОформление.Элементы.Очистить();
	
	Если МассивСотрудники.Количество() > 0 Тогда
		Для Каждого Сотрудник Из МассивСотрудники Цикл
			ЭлементОформления = УсловноеОформление.Элементы.Добавить(); 
			
			ЭлементОформления.Использование = Истина;  
			ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет (255, 154, 244));
			ЭлементУсловия = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
			ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтпускаСотрудников.Сотрудник"); 
			ЭлементУсловия.ПравоеЗначение = Сотрудник; 
			ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; 
			ЭлементУсловия.Использование = Истина; 
			
			ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить(); 
			ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ОтпускаСотрудниковСотрудник"); 
		КонецЦикла;
	КонецЕсли;
    //ВКМ_}
	
КонецПроцедуры


&НаСервере
Функция ВКМ_ПолучитьКоличествоДнейОтпуска()
	
	//***Добавлено Ивашко ВКМ_{
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
		|	ВложенныйЗапрос.ДатаНачала КАК ДатаНачала,
		|	ВложенныйЗапрос.ДатаОкончания КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	&ТЧОтпускаСотрудников КАК ВложенныйЗапрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
		|	СУММА(РАЗНОСТЬДАТ(ВТ_ДанныеДокумента.ДатаНачала, ВТ_ДанныеДокумента.ДатаОкончания, ДЕНЬ) + 1) КАК КолвоДней
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДанныеДокумента.Сотрудник";
	
	Запрос.УстановитьПараметр("ТЧОтпускаСотрудников", Объект.ОтпускаСотрудников.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Выборка = РезультатЗапроса.Выбрать(); 
		
	МассивСотрудники = Новый Массив;
		
	Пока Выборка.Следующий()Цикл
		
		Если Выборка.КолвоДней > 28 Тогда
			МассивСотрудники.Добавить(Выборка.Сотрудник);
		КонецЕсли;
			
	КонецЦикла;
		
		 Возврат МассивСотрудники;
		 
	//ВКМ_}
	
КонецФункции

#КонецОбласти








  


